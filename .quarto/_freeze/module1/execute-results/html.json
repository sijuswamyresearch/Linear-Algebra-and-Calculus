{
  "hash": "c33998768e5c3df304f2f5450d5f752b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Module-1: Linear Systems, Properties, and its Solution\"\njupyter: python3\n---\n\n\n>**Syllabus:** System of linear equations - Solution by Gauss elimination - Row Echelon form and\nRank of a matrix - Fundamental theorem for linear systems of homogeneous and\nnonhomogeneous (statement only) - Homogeneous linear system - Non-homogeneous linear system\n\n# Introduction\nWelcome! We're about to begin a journey into one of the most useful and beautiful subjects in mathematics. But we're not going to start with abstract definitions. We're going to start with a concrete problem that you've seen before, but we'll look at it in a new way. The entire field of linear algebra grew from the simple need to solve systems of linear equations.\n\nLet's consider a simple system:\n\n$$\n\\begin{align*}\n2x - y &= 1 \\\\\nx + y &= 5\n\\end{align*}\n$$\n\nHow do we think about this? There are two fundamental viewpoints, and seeing them both is the key to understanding linear algebra.\n\n## The Row Picture: Intersecting Lines\n\nThe first way, and the one you're probably most familiar with, is the **Row Picture**. Each equation represents a line on the $xy$-plane. The solution to the system is the single point where these two lines intersect.\n\nLet's use Python to see this. We're not just finding the answer; we're visualizing the problem.\n\n::: {#cell-fig-row-picture-matplotlib .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define the matrix A and vector b for the system Ax = b\nA = np.array([\n    [2, -1],\n    [1,  1]\n])\nb = np.array([1, 5])  # Corrected\n\n# Solve Ax = b\nsolution = np.linalg.solve(A, b)\nx_sol, y_sol = solution  # unpack for plotting\n\n# For plotting the lines\nx_vals = np.linspace(0, 4, 100)\n# From 2x - y = 1  => y = 2x - 1\ny1_vals = 2 * x_vals - 1\n# From x + y = 5   => y = -x + 5\ny2_vals = -x_vals + 5\n\n# --- Matplotlib Plotting ---\nplt.figure(figsize=(8, 6))\nax = plt.gca()\n\n# Plot the two lines\nax.plot(x_vals, y1_vals, label='$2x - y = 1$')\nax.plot(x_vals, y2_vals, label='$x + y = 5$')\n\n# Plot the solution point\nax.plot(x_sol, y_sol, 'ro', markersize=10, label=f'Solution ({x_sol:.0f}, {y_sol:.0f})')\n\n# Titles and labels\nax.set_title(\"The Row Picture\")\nax.set_xlabel(\"x-axis\")\nax.set_ylabel(\"y-axis\")\n\n# Grid, legend, limits\nax.grid(True)\nax.legend()\nax.set_xlim(0, 4)\nax.set_ylim(0, 6)\n\n# Show plot\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![The Row Picture (Matplotlib): The solution $(2, 3)$ is the intersection of two lines.](module1_files/figure-html/fig-row-picture-matplotlib-output-1.png){#fig-row-picture-matplotlib width=661 height=523}\n:::\n:::\n\n\nThe plot clearly shows that the two lines meet at the point **$(2, 3)$**. That's our solution. For a $3 \\times 3$ system, the row picture would be three planes intersecting at a single point. For anything larger, we can't draw it, but the idea is the same! This is why we need a more systematic approach.\n\n## The Column Picture: Combining Vectors\n\nNow for the second way, which is completely different and incredibly powerful. This is the **Column Picture**. We rewrite the system in a vector form:\n\n$$\nx \\begin{bmatrix} 2 \\\\ 1 \\end{bmatrix} + y \\begin{bmatrix} -1 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 5 \\end{bmatrix}\n$$\n\nThe question now becomes: how much of the first \"column vector\" $\\begin{bmatrix} 2 \\\\ 1\\end{bmatrix}$ do we need to add to how much of the second \"column vector\" $\\begin{bmatrix} -1 \\\\ 1\\end{bmatrix}$ to get the target vector $\\begin{bmatrix} 1 \\\\ 5\\end{bmatrix}$?\n\nWe are trying to find the correct linear combination of the column vectors.\n\nLet's see what this looks like. We need to find the numbers $x$ and $y$ that let us \"reach\" the target vector $b$. From the row picture, we already know the answer is $x=2$ and $y=3$. Let's verify this with the vectors.\n\n::: {#cell-fig-column-picture .cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define the vectors\nv1 = np.array([2, 1])\nv2 = np.array([-1, 1])\nb = np.array([1, 5])\n\n# The solution coefficients\nx, y = 2, 3\n\n# Prepare the figure\nplt.figure(figsize=(6, 6))\nax = plt.gca()\n\n# Draw base vectors from origin\nax.quiver(0, 0, v1[0], v1[1], angles='xy', scale_units='xy', scale=1,\n          label='v1 = [2, 1]')\nax.quiver(0, 0, v2[0], v2[1], angles='xy', scale_units='xy', scale=1,\n          label='v2 = [-1, 1]')\n\n# Draw scaled v1 (2 * v1) from origin\nscaled_v1 = x * v1\nax.quiver(0, 0, scaled_v1[0], scaled_v1[1], angles='xy', scale_units='xy', scale=1,\n          alpha=0.7, label='2 * v1')\n\n# Draw scaled v2 (3 * v2) starting from the tip of 2*v1\nscaled_v2 = y * v2\nax.quiver(scaled_v1[0], scaled_v1[1], scaled_v2[0], scaled_v2[1], angles='xy',\n          scale_units='xy', scale=1, alpha=0.7, label='3 * v2 (from tip of 2*v1)')\n\n# Draw the target vector b from origin\nax.quiver(0, 0, b[0], b[1], angles='xy', scale_units='xy', scale=1, color='red',\n          label='b = [1, 5]')\n\n# Cosmetic adjustments\nax.set_xlim(-2, 6)\nax.set_ylim(-2, 7)\nax.set_xlabel(\"x-component\")\nax.set_ylabel(\"y-component\")\nax.set_aspect('equal', adjustable='box')  # preserve vector directions/lengths\nax.grid(True)\nax.legend(loc='upper left')\nplt.title(\"The Column Picture\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![The Column Picture: 2*v1 + 3*v2 = b, with v1=[2,1], v2=[-1,1], b=[1,5].](module1_files/figure-html/fig-column-picture-output-1.png){#fig-column-picture width=465 height=523}\n:::\n:::\n\n\nThis picture shows that if you walk along the blue vector twice, and then walk along the green vector three times, you land exactly on the red target vector. We have found the right combination!\n\n## The Algorithm: Gauss Elimination\n\nDrawing pictures is great for intuition, but it's not a practical way to solve a $10 \\times 10$ system. We need a rock-solid algorithm. That algorithm is **Gauss Elimination**. The goal is simple: turn a complicated system into a simple one that is easy to solve.\n\nWe do this by creating an **Augmented Matrix**. It's just a way to hold all the numbers of our system without writing the variables over and over.\n\nFor the system:\n$$\n\\begin{align*}\nx + 2y + z &= 2 \\\\\n3x + 8y + z &= 12 \\\\\n4y + z &= 2\n\\end{align*}\n$$\n\nThe augmented matrix is:\n$$\n\\left[\n\\begin{array}{ccc|c}\n1 & 2 & 1 & 2 \\\\\n3 & 8 & 1 & 12 \\\\\n0 & 4 & 1 & 2\n\\end{array}\n\\right]\n$$\n\n#### The Rules of the Game\nThere are only three operations we are allowed to do. These operations don't change the final solution:\n1.  Swap two rows.\n2.  Multiply a row by a non-zero constant.\n3.  Add a multiple of one row to another row. ($R_i \\leftarrow R_i + cR_j$)\n\nOur goal is to use these rules to create zeros below the main diagonal. This turns the matrix into **Row Echelon Form**.\n\n### A Full Example: Solving a 3x3 System\n\nLet's solve the system above using Python's symbolic math library, `SymPy`. This is great for teaching because it can show us the exact steps and avoid messy decimals.\n\n::: {#sympy-elimination .cell cap='The step-by-step elimination process using SymPy.' execution_count=3}\n``` {.python .cell-code}\nimport sympy as sp\n\n# Create augmented matrix\nM = sp.Matrix([\n  [1, 2, 1,  2],\n  [3, 8, 1, 12],\n  [0, 4, 1,  2]\n])\n\nprint(\"Original Matrix:\")\nsp.pprint(M)\n\n# Step 1\nM[1, :] = M[1, :] - 3 * M[0, :]\nprint(\"\\nAfter first elimination step (R_2 <- R_2 - 3*R_1):\")\nsp.pprint(M)\n\n# Step 2\nM[2, :] = M[2, :] - 2 * M[1, :]\nprint(\"\\nAfter second elimination step (R_3 <- R_3 - 2*R_2):\")\nsp.pprint(M)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOriginal Matrix:\n⎡1  2  1  2 ⎤\n⎢           ⎥\n⎢3  8  1  12⎥\n⎢           ⎥\n⎣0  4  1  2 ⎦\n\nAfter first elimination step (R_2 <- R_2 - 3*R_1):\n⎡1  2  1   2⎤\n⎢           ⎥\n⎢0  2  -2  6⎥\n⎢           ⎥\n⎣0  4  1   2⎦\n\nAfter second elimination step (R_3 <- R_3 - 2*R_2):\n⎡1  2  1    2 ⎤\n⎢             ⎥\n⎢0  2  -2   6 ⎥\n⎢             ⎥\n⎣0  0  5   -10⎦\n```\n:::\n:::\n\n\nLook at that final matrix! We have an upper-triangular form. This is **Row Echelon Form**. The first non-zero entries in each row are called **pivots**. Here our pivots are 1, 2, and 5.\n\nThe system has now become:\n$$\n\\begin{align*}\nx + 2y + z &= 2 \\\\\n2y - 2z &= 6 \\\\\n5z &= -10\n\\end{align*}\n$$\n\nThis is easy to solve by *back substitution*.\nFrom the last row: $5z = -10 \\implies z = -2$.\nSubstitute into the second row: $2y - 2(-2) = 6 \\implies 2y + 4 = 6 \\implies y = 1$.\nSubstitute both into the first row: $x + 2(1) + (-2) = 2 \\implies x = 2$.\n\nSo the solution is $(x, y, z) = (2, 1, -2)$.\n\nOf course, we can have a computer do this all at once. The `rref()` method will take it all the way to *Reduced Row Echelon Form*, where the pivots are 1 and there are zeros *above* them as well.\n\n::: {#sympy-rref .cell cap='The final Reduced Row Echelon Form (RREF).' execution_count=4}\n``` {.python .cell-code}\nM_original = sp.Matrix([\n  [1, 2, 1,  2],\n  [3, 8, 1, 12],\n  [0, 4, 1,  2]\n])\n\nM_rref, pivots = M_original.rref()\nprint(\"Reduced Row Echelon Form (RREF):\")\nsp.pprint(M_rref)\nprint(\"\\nPivot columns are:\", pivots)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReduced Row Echelon Form (RREF):\n⎡1  0  0  2 ⎤\n⎢           ⎥\n⎢0  1  0  1 ⎥\n⎢           ⎥\n⎣0  0  1  -2⎦\n\nPivot columns are: (0, 1, 2)\n```\n:::\n:::\n\n\nThe RREF form directly tells us the solution: $1x = 2$, $1y = 1$, $1z = -2$.\n\nIn this method the unknowns are eliminated successively and the system is reduced to an upper triangular system from which the unknowns can be found by back substitution.\n\n>**Problem 1:**\n\tUsing Gauss elimination method, solve the system\n\t\\begin{align*}\n\t\t4x-6y &=-11\\\\\n\t\t-3x+8y &=10\n\t\\end{align*}\n    \n**Solution:** The given system is $AX=b$ where $A=\\begin{bmatrix}\n\t4 &-6\\\\\n\t-3 &8\n\\end{bmatrix}$, $X=\\begin{bmatrix}\nx\\\\\ny\n\\end{bmatrix}$, $b=\\begin{bmatrix}\n-11\\\\\n10\n\\end{bmatrix}$\n\\begin{align*}\n\t[A|b]&=\\begin{bmatrix}\n\t\t4 &-6 &\\bigm| &-11\\\\\n\t\t-3 &8 &\\bigm| &10\n\t\\end{bmatrix}\\\\\n&\\sim \\begin{bmatrix}\n\t4 &-6 &\\bigm| &-11\\\\\n\t0 &\\frac{7}{2} &\\bigm| &\\frac{7}{4}\n\\end{bmatrix}\\begin{array}{c}\nR_2\\rightarrow R_2+\\dfrac{3}{4}R_1\n\\end{array}\n\\end{align*}\nThe system is reduced to $$\\begin{bmatrix}\n\t4 &-6\\\\\n\t0 &\\frac{7}{2}\n\\end{bmatrix}\\begin{bmatrix}\nx\\\\\ny\n\\end{bmatrix}=\\begin{bmatrix}\n-11\\\\\n\\frac{7}{4}\n\\end{bmatrix}$$\n\\begin{align*}\n\t4x-6y &=-11......(1)\\\\\n\t\\frac{7}{2}y &=\\frac{7}{4}.....(2)\n\\end{align*}\n\n$(2)\\rightarrow y=\\frac{1}{2}$ and substituting in (1) we get $x=-2$. $\\therefore$ the solution is $$x=-2,y=\\frac{1}{2}$$\n\n>**Problem 2:**\n\tUsing Gauss elimination method, find the solution of\n\t\\begin{align*}\n\t\tx-y &=-3\\\\\n\t\t-2x+2y &=6\n\t\\end{align*}\n\n**Solution:** The given system is $AX=B$ where $A=\\begin{bmatrix}\n\t1 &-1\\\\\n\t-2 &2\n\\end{bmatrix}$, $X=\\begin{bmatrix}\n\tx\\\\\n\ty\n\\end{bmatrix}$, $b=\\begin{bmatrix}\n\t-3\\\\\n\t6\n\\end{bmatrix}$\n\\begin{align*}\n\t[A|b]&=\\begin{bmatrix}\n\t\t1 &-1 &\\bigm| &-3\\\\\n\t\t-2 &2 &\\bigm| &6\n\t\\end{bmatrix}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &-1 &\\bigm| &-3\\\\\n\t\t0 &0 &\\bigm| &0\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_2\\rightarrow R_2+2R_1\n\t\\end{array}\n\\end{align*}\nThe system is reduced to $$\\begin{bmatrix}\n\t1 &-1\\\\\n\t0 &0\n\\end{bmatrix}\\begin{bmatrix}\n\tx\\\\\n\ty\n\\end{bmatrix}=\\begin{bmatrix}\n\t-3\\\\\n\t0\n\\end{bmatrix}$$\n\\begin{align*}\n\tx-y &=-3.....(1)\\\\\n\t0 &=0.....(2)\n\\end{align*}\n\nIn (1) put $y=t$ then $x=-3+t$. $\\therefore$ the solution is $$x=t-3,y=t$$\n\n>**Problem 3:** Using Gauss elimination method, find the solution of\n\n\\begin{align*}\n-x-y &=1\\\\\n-3x-3y &=2\n\\end{align*}\n\n**Solution:** The given system is $AX=b$ where $A=\\begin{bmatrix}\n\t-1 &-1\\\\\n\t-3 &-3\n\\end{bmatrix}$, $X=\\begin{bmatrix}\n\tx\\\\\n\ty\n\\end{bmatrix}$, $b=\\begin{bmatrix}\n\t1\\\\\n\t2\n\\end{bmatrix}$\n\\begin{align*}\n\t[A|b]&=\\begin{bmatrix}\n\t\t-1 &-1 &\\bigm| &1\\\\\n\t\t-3 &-3 &\\bigm| &2\n\t\\end{bmatrix}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t-1 &-1 &\\bigm| &1\\\\\n\t\t0 &0 &\\bigm| &-1\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_2\\rightarrow R_2-3R_1\n\t\\end{array}\n\\end{align*}\nThe system is reduced to $$\\begin{bmatrix}\n\t-1 &-1\\\\\n\t0 &0\n\\end{bmatrix}\\begin{bmatrix}\n\tx\\\\\n\ty\n\\end{bmatrix}=\\begin{bmatrix}\n\t1\\\\\n\t-1\n\\end{bmatrix}$$\n\\begin{align*}\n\t-x-y &=1.....(1)\\\\\n\t0 &=-1.....(2)\n\\end{align*}\nThe false statement $0=-1$ shows that the system has no solution.\n\n>**Problem 4:** Solve the linear system\n\\begin{align*}\n\t\tx_1-x_2+x_3 &=0\\\\\n\t\t-x_1+x_2-x_3 &=0\\\\\n\t\t10x_2+25x_3 &= 90\\\\\n\t\t20x_1+10x_2 &= 80\n\\end{align*}\t\n\n**Solution:** The given system is $AX=B$ where $A=\\begin{bmatrix}\n\t1 &-1 &1\\\\\n\t-1 &1 &-1\\\\\n\t0 &10 &25\\\\\n\t20 &10 &0\n\\end{bmatrix}$, $X=\\begin{bmatrix}\n\tx_1\\\\\n\tx_2\\\\\n\tx_3\n\\end{bmatrix}$, $b=\\begin{bmatrix}\n\t0\\\\\n\t0\\\\\n\t90\\\\\n\t80\n\\end{bmatrix}$\n\\begin{align*}\n\t[A|b]&=\\begin{bmatrix}\n\t\t1 &-1  &1 &\\bigm| &0\\\\\n\t\t-1 &1 &-1 &\\bigm| &0\\\\\n\t\t0 &10 &25 &\\bigm| &90\\\\\n\t\t20 &10 &0 &\\bigm| &80\n\t\\end{bmatrix}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &-1  &1 &\\bigm| &0\\\\\n\t\t0 &0 &0 &\\bigm| &0\\\\\n\t\t0 &10 &25 &\\bigm| &90\\\\\n\t\t0 &30 &-20 &\\bigm| &80\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_2\\rightarrow R_2+R_1\\\\\n\t\tR_4\\rightarrow R_4-20R_1\n\t\\end{array}\\\\\n\t&\\sim \\begin{bmatrix}\n\t1 &-1  &1 &\\bigm| &0\\\\\n\t0 &30 &-20 &\\bigm| &80\\\\\n\t0 &10 &25 &\\bigm| &90\\\\\n\t0 &0 &0 &\\bigm| &0\n\\end{bmatrix}\\begin{array}{c}\n\tR_2\\leftrightarrow R_4\n\\end{array}\\\\\n&\\sim \\begin{bmatrix}\n\t1 &-1  &1 &\\bigm| &0\\\\\n\t0 &10 &25 &\\bigm| &90\\\\\n\t0 &30 &-20 &\\bigm| &80\\\\\n\t\t0 &0 &0 &\\bigm| &0\n\\end{bmatrix}\\begin{array}{c}\n\tR_2\\leftrightarrow R_3\n\\end{array}\\\\\n&\\sim \\begin{bmatrix}\n\t1 &-1  &1 &\\bigm| &0\\\\\n\t0 &10 &25 &\\bigm| &90\\\\\n\t0 &0 &-95 &\\bigm| &-190\\\\\n\t0 &0 &0 &\\bigm| &0\n\\end{bmatrix}\\begin{array}{c}\n\tR_3\\rightarrow R_3-3R_2\n\\end{array}\\\\\n\\end{align*}\nThe system is reduced to $$\\begin{bmatrix}\n\t1 &-1 &1\\\\\n\t0 &10 &25\\\\\n\t0 &0 &-95\\\\\n\t0 &0 &0\n\\end{bmatrix}\\begin{bmatrix}\n\tx_1\\\\\n\tx_2\\\\\n\tx_3\n\\end{bmatrix}=\\begin{bmatrix}\n\t0\\\\\n\t90\\\\\n\t-190\\\\\n\t0\n\\end{bmatrix}$$\n\\begin{align*}\n\tx_1-x_2+x_3 &=0.....(1)\\\\\n\t10x_2+25x_3 &=90.....(2)\\\\\n\t-95x_3 &=-190........(3)\\\\\n\t0 &=0............(4)\n\\end{align*}\n$(3)\\rightarrow x_3=2$ and substituting in (2), we get $x_2=4$\n\nSubstituting the value of $x_2$ and $x_3$ in (1), we get $x_1=2$. $\\therefore$ the solution is $x_1=2, x_2=4, x_3=2$.\n\n>**Problem 5:**\n\tUsing Gauss elimination method, find the solution of the system of equation\t\n\\begin{align*}\n\t\t2x+z &=3\\\\\n\t\tx-y-z&=1\\\\\n\t\t3x-y &= 4\n\\end{align*}\n\n**Solution:** The given system is $AX=b$ where $A=\\begin{bmatrix}\n\t2 &0 &1\\\\\n\t1 &-1 &-1\\\\\n\t3 &-1 &0\n\\end{bmatrix}$, $X=\\begin{bmatrix}\n\tx\\\\\n\ty\\\\\n\tz\n\\end{bmatrix}$, $b=\\begin{bmatrix}\n\t3\\\\\n\t1\\\\\n\t4\n\\end{bmatrix}$\n\\begin{align*}\n\t[A|b]&=\\begin{bmatrix}\n\t\t2 &0  &1 &\\bigm| &3\\\\\n\t\t1 &-1 &-1 &\\bigm| &1\\\\\n\t\t3 &-1 &0 &\\bigm| &4\n\t\\end{bmatrix}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &-1  &-1 &\\bigm| &1\\\\\n\t\t2 &0 &1 &\\bigm| &3\\\\\n\t\t3 &-1 &0 &\\bigm| &4\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_1\\leftrightarrow R_2\n\t\\end{array}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &-1  &-1 &\\bigm| &1\\\\\n\t\t0 &2 &3 &\\bigm| &1\\\\\n\t\t0 &2 &3 &\\bigm| &1\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_2\\rightarrow R_2-2R_1\\\\\n\t\tR_3\\rightarrow R_3-3R_1\n\t\\end{array}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &-1  &-1 &\\bigm| &1\\\\\n\t\t0 &2 &3 &\\bigm| &1\\\\\n\t\t0 &0 &0 &\\bigm| &0\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_3\\rightarrow R_3-R_2\n\t\\end{array}\n\\end{align*}\nThe system is reduced to $$\\begin{bmatrix}\n\t1 &-1 &-1\\\\\n\t0 &2 &3\\\\\n\t0 &0 &0\n\\end{bmatrix}\\begin{bmatrix}\n\tx\\\\\n\ty\\\\\n\tz\n\\end{bmatrix}=\\begin{bmatrix}\n\t1\\\\\n\t1\\\\\n\t0\n\\end{bmatrix}$$\n\\begin{align*}\n\tx-y-z &=1.....(1)\\\\\n\t2y+3z &=1.....(2)\\\\\n\t0 &=0........(3)\n\\end{align*}\nPut $z=t$, then $(2)\\rightarrow 2y=1-3t\\Rightarrow y=\\frac{1}{2}-\\frac{3}{2}t$\\\\\n$(1)\\rightarrow x=\\frac{3}{2}-\\frac{1}{2}t$. $\\therefore$ the solution is $x=\\frac{3}{2}-\\frac{1}{2}t, y=\\frac{1}{2}-\\frac{3}{2}t, z=t$.\n\n>**Problem 6:** Solve the linear system\t\n    \\begin{align*}\n\t\t3x_1+2x_2+x_3 &=3\\\\\n\t\t2x_1+x_2+x_3 &=0\\\\\n\t\t6x_1+2x_2+4x_3 &= 6\n\t\\end{align*}\n\n**Solution:** $The given system is $AX=b$ where $A=\\begin{bmatrix}\n\t3 &2 &1\\\\\n\t2 &1 &1\\\\\n\t6 &2 &4\n\\end{bmatrix}$, $X=\\begin{bmatrix}\n\tx_1\\\\\n\tx_2\\\\\n\tx_3\n\\end{bmatrix}$, $b=\\begin{bmatrix}\n\t3\\\\\n\t0\\\\\n\t6\n\\end{bmatrix}$\n\\begin{align*}\n\t[A|b]&=\\begin{bmatrix}\n\t\t3 &2  &1 &\\bigm| &3\\\\\n\t\t2 &1 &1 &\\bigm| &0\\\\\n\t\t6 &2 &4 &\\bigm| &6\n\t\\end{bmatrix}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t3 &2  &1 &\\bigm| &3\\\\\n\t\t0 &-\\frac{1}{3} &\\frac{1}{3} &\\bigm| &-2\\\\\n\t\t0 &-2 &2 &\\bigm| &0\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_2\\rightarrow R_2-\\frac{2}{3}R_1\\\\\n\t\tR_3\\rightarrow R_3-2R_1\n\t\\end{array}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t3 &2  &1 &\\bigm| &3\\\\\n\t\t0 &-\\frac{1}{3} &\\frac{1}{3} &\\bigm| &-2\\\\\n\t\t0 &0 &0 &\\bigm| &12\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_3\\rightarrow R_3-6R_2\n\t\\end{array}\n\\end{align*}\nThe system is reduced to $$\\begin{bmatrix}\n\t3 &2 &1\\\\\n\t0 &-\\frac{1}{3} &\\frac{1}{3}\\\\\n\t0 &0 &0\n\\end{bmatrix}\\begin{bmatrix}\n\tx_1\\\\\n\tx_2\\\\\n\tx_3\n\\end{bmatrix}=\\begin{bmatrix}\n\t3\\\\\n\t-2\\\\\n\t12\n\\end{bmatrix}$$\n\\begin{align*}\n\t3x_1+2x_2+x_3 &=3.....(1)\\\\\n\t-\\frac{1}{3}x_2+\\frac{1}{3}x_3 &=9-2.....(2)\\\\\n\t0 &=12........(3)\n\\end{align*}\n\nThe false statement $0=12$ shows that the system has no solution.\n\n>**Problem 7:** \tUsing Gauss elimination method, find the solution of the system of equation\t\n\\begin{align*}\n\t\tx+2y+z &=3\\\\\n\t\t2x+3y+2z&=5\\\\\n\t\t3x-5y+5z &= 2\\\\\n\t\t3x+9y-z &=4\n\\end{align*}\n\n**Solution:** The given system is $AX=B$ where $A=\\begin{bmatrix}\n\t1 &2 &1\\\\\n\t2 &3 &2\\\\\n\t3 &-5 &5\\\\\n\t3 &9 &-1\n\\end{bmatrix}$, $X=\\begin{bmatrix}\n\tx\\\\\n\ty\\\\\n\tz\n\\end{bmatrix}$, $b=\\begin{bmatrix}\n\t3\\\\\n\t5\\\\\n\t2\\\\\n\t4\n\\end{bmatrix}$\n\\begin{align*}\n\t[A|b]&=\\begin{bmatrix}\n\t\t1 &2  &1 &\\bigm| &3\\\\\n\t\t2 &3 &2 &\\bigm| &5\\\\\n\t\t3 &-5 &5 &\\bigm| &2\\\\\n\t\t3 &9 &-1 &\\bigm| &4\n\t\\end{bmatrix}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &2  &1 &\\bigm| &3\\\\\n\t\t0 &-1 &0 &\\bigm| &-1\\\\\n\t\t0 &-11 &2 &\\bigm| &-7\\\\\n\t\t0 &3 &-4 &\\bigm| &-5\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_2\\rightarrow R_2-2R_1\\\\\n\t\tR_3\\rightarrow R_3-3R_1\\\\\n\t\tR_4\\rightarrow R_4-3R_1\n\t\\end{array}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &2  &1 &\\bigm| &3\\\\\n\t\t0 &-1 &0 &\\bigm| &-1\\\\\n\t\t0 &0 &2 &\\bigm| &4\\\\\n\t\t0 &0 &-4 &\\bigm| &-8\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_3\\rightarrow R_3-11R_2\\\\\n\t\tR_4\\rightarrow R_4+3R_2\n\t\\end{array}\\\\\n\t&\\sim \\begin{bmatrix}\n\t\t1 &2  &1 &\\bigm| &3\\\\\n\t\t0 &-1 &0 &\\bigm| &-1\\\\\n\t\t0 &0 &2 &\\bigm| &4\\\\\n\t\t0 &0 &0 &\\bigm| &0\n\t\\end{bmatrix}\\begin{array}{c}\n\t\tR_4\\rightarrow R4+2R_3\n\t\\end{array}\n\\end{align*}\nThe system is reduced to $$\\begin{bmatrix}\n\t1 &2 &1\\\\\n\t0 &-1 &0\\\\\n\t0 &0 &2\\\\\n\t0 &0 &0\n\\end{bmatrix}\\begin{bmatrix}\n\tx\\\\\n\ty\\\\\n\tz\n\\end{bmatrix}=\\begin{bmatrix}\n\t3\\\\\n\t-1\\\\\n\t4\\\\\n\t0\n\\end{bmatrix}$$\n\\begin{align*}\n\tx+2y+z &=3.....(1)\\\\\n\t-y+0z &=-1.....(2)\\\\\n\t2z &=4 .........(3)\\\\\n\t0 &=0........(4)\n\\end{align*}\n$(3)\\rightarrow z=2$ and substituting in (2), we get $y=1$\\\\\nAlso substituting $y$ and $z$ in (1), we get $x=-1$. $\\therefore$ the solution is $x=-1, y=1, z=2$.\n\n### Row Echelon Form\n\nAt the end of the Gauss elimination the form of the coefficient matrix, the augmented matrix and the system itself are called row echelon form. In it, rows of zeros, if present, are the last rows and the number of zeros before the leading nonzero element in each row is greater than the corresponding number of zeros of the preceeding rows.\n\n\n## Solve the following using Gauss Elimination method.\n\n### Question 1\nSolve the system:\n$$\n\\begin{cases}\n2x + y - z = 8 \\\\\n-3x - y + 2z = -11 \\\\\n-2x + y + 2z = -3\n\\end{cases}\n$$\n\n**Solution:**\n\nStart with the augmented matrix:\n$$\n\\begin{bmatrix}\n2 & 1 & -1 & 8 \\\\\n-3 & -1 & 2 & -11 \\\\\n-2 & 1 & 2 & -3\n\\end{bmatrix}\n$$\n\nApply $R_2 \\rightarrow R_2 + \\frac{3}{2}R_1$ and $R_3 \\rightarrow R_3 + R_1$:\n\n$$\n\\begin{bmatrix}\n2 & 1 & -1 & 8 \\\\\n0 & 0.5 & 0.5 & 1 \\\\\n0 & 2 & 1 & 5\n\\end{bmatrix}\n$$\n\nNext, $R_3 \\rightarrow R_3 - 4R_2$:\n\n$$\n\\begin{bmatrix}\n2 & 1 & -1 & 8 \\\\\n0 & 0.5 & 0.5 & 1 \\\\\n0 & 0 & -1 & 1\n\\end{bmatrix}\n$$\n\nFrom the last row: $z = -1$. Substituting back:\n- From $R_2$: $0.5y + 0.5(-1) = 1 \\implies y = 3$\n- From $R_1$: $2x + 3 - (-1) = 8 \\implies x = 2$\n\nFinal solution: $\\boxed{x=2, y=3, z=-1}$.\n\n---\n\n### Question 2\nSolve:\n$$\n\\begin{cases}\nx + 2y + 3z = 14 \\\\\n2x + y + z = 10 \\\\\n3x + 4y + 7z = 30\n\\end{cases}\n$$\n\n**Solution:**\n\nAugmented matrix:\n$$\n\\begin{bmatrix}\n1 & 2 & 3 & 14 \\\\\n2 & 1 & 1 & 10 \\\\\n3 & 4 & 7 & 30\n\\end{bmatrix}\n$$\n\n$R_2 \\rightarrow R_2 - 2R_1$, $R_3 \\rightarrow R_3 - 3R_1$:\n\n$$\n\\begin{bmatrix}\n1 & 2 & 3 & 14 \\\\\n0 & -3 & -5 & -18 \\\\\n0 & -2 & -2 & -12\n\\end{bmatrix}\n$$\n\n$R_3 \\rightarrow R_3 - \\frac{2}{3}R_2$:\n\n$$\n\\begin{bmatrix}\n1 & 2 & 3 & 14 \\\\\n0 & -3 & -5 & -18 \\\\\n0 & 0 & \\frac{4}{3} & 0\n\\end{bmatrix}\n$$\n\nFrom $R_3$: $z = 0$.  \nFrom $R_2$: $-3y - 5(0) = -18 \\implies y = 6$.  \nFrom $R_1$: $x + 2(6) + 3(0) = 14 \\implies x = 2$.\n\nSolution: $\\boxed{x=2, y=6, z=0}$.\n\n---\n\n### Question 3\nSolve:\n$$\n\\begin{cases}\nx - y + z = 4 \\\\\n2x + y - z = 2 \\\\\n3x + y + z = 10\n\\end{cases}\n$$\n\n**Solution:**\n\nAugmented matrix:\n$$\n\\begin{bmatrix}\n1 & -1 & 1 & 4 \\\\\n2 & 1 & -1 & 2 \\\\\n3 & 1 & 1 & 10\n\\end{bmatrix}\n$$\n\n$R_2 \\rightarrow R_2 - 2R_1$, $R_3 \\rightarrow R_3 - 3R_1$:\n\n$$\n\\begin{bmatrix}\n1 & -1 & 1 & 4 \\\\\n0 & 3 & -3 & -6 \\\\\n0 & 4 & -2 & -2\n\\end{bmatrix}\n$$\n\n$R_3 \\rightarrow R_3 - \\frac{4}{3}R_2$:\n\n$$\n\\begin{bmatrix}\n1 & -1 & 1 & 4 \\\\\n0 & 3 & -3 & -6 \\\\\n0 & 0 & 2 & 6\n\\end{bmatrix}\n$$\n\nFrom $R_3$: $z = 3$.  \nFrom $R_2$: $3y - 3(3) = -6 \\implies y = 1$.  \nFrom $R_1$: $x - 1 + 3 = 4 \\implies x = 2$.\n\nSolution: $\\boxed{x=2, y=1, z=3}$.\n\n---\n\n### Question 4\nSolve:\n$$\n\\begin{cases}\nx + y + z = 6 \\\\\n2x + 3y + 5z = 4 \\\\\n4x + 0y + 5z = 2\n\\end{cases}\n$$\n\n**Solution:**\n\nAugmented matrix:\n$$\n\\begin{bmatrix}\n1 & 1 & 1 & 6 \\\\\n2 & 3 & 5 & 4 \\\\\n4 & 0 & 5 & 2\n\\end{bmatrix}\n$$\n\n$R_2 \\rightarrow R_2 - 2R_1$, $R_3 \\rightarrow R_3 - 4R_1$:\n\n$$\n\\begin{bmatrix}\n1 & 1 & 1 & 6 \\\\\n0 & 1 & 3 & -8 \\\\\n0 & -4 & 1 & -22\n\\end{bmatrix}\n$$\n\n$R_3 \\rightarrow R_3 + 4R_2$:\n\n$$\n\\begin{bmatrix}\n1 & 1 & 1 & 6 \\\\\n0 & 1 & 3 & -8 \\\\\n0 & 0 & 13 & -54\n\\end{bmatrix}\n$$\n\nFrom $R_3$: $z = -54/13$.  \nFrom $R_2$: $y + 3(-54/13) = -8 \\implies y = -8 + 162/13 = -104/13 + 162/13 = 58/13$.  \nFrom $R_1$: $x + 58/13 - 54/13 = 6 \\implies x = 6 - 4/13 = 74/13$.\n\nSolution: $\\boxed{x=\\frac{74}{13},\\ y=\\frac{58}{13},\\ z=-\\frac{54}{13}}$.\n\n---\n\n### Question 5\nSolve:\n$$\n\\begin{cases}\n2x + 4y - 2z = 2 \\\\\n4x + 9y - 3z = 8 \\\\\n-2x - 3y + 7z = 10\n\\end{cases}\n$$\n\n**Solution:**\n\nAugmented matrix:\n$$\n\\begin{bmatrix}\n2 & 4 & -2 & 2 \\\\\n4 & 9 & -3 & 8 \\\\\n-2 & -3 & 7 & 10\n\\end{bmatrix}\n$$\n\n$R_2 \\rightarrow R_2 - 2R_1$, $R_3 \\rightarrow R_3 + R_1$:\n\n$$\n\\begin{bmatrix}\n2 & 4 & -2 & 2 \\\\\n0 & 1 & 1 & 4 \\\\\n0 & 1 & 5 & 12\n\\end{bmatrix}\n$$\n\n$R_3 \\rightarrow R_3 - R_2$:\n\n$$\n\\begin{bmatrix}\n2 & 4 & -2 & 2 \\\\\n0 & 1 & 1 & 4 \\\\\n0 & 0 & 4 & 8\n\\end{bmatrix}\n$$\n\nFrom $R_3$: $z = 2$.  \nFrom $R_2$: $y + 2 = 4 \\implies y = 2$.  \nFrom $R_1$: $2x + 8 - 4 = 2 \\implies x = -1$.\n\nSolution: $\\boxed{x=-1, y=2, z=2}$.\n\n## Tutorial questions\n\n### Problem 1: Circuit Analysis (Electronics Core)\n\n**Scenario:**\n\nYou are given a simple DC circuit with three loops. Using Kirchhoff's Voltage Law (KVL), which states that the sum of voltages around any closed loop must be zero, we can set up a system of equations to find the unknown loop currents $i_1, i_2,$ and $i_3$.\n\n![Circuit](Circuit.png){#fig-circuit}\n\n*   **Loop 1:** The 30V source minus the voltage drops across the 4Ω and 2Ω resistors gives the equation:\n    $30 - 4i_1 - 2(i_1 - i_2) = 0$\n\n*   **Loop 2:** The voltage drops across the 2Ω, 1Ω, and 3Ω resistors give:\n    $-2(i_2 - i_1) - 1i_2 - 3(i_2 - i_3) = 0$\n\n*   **Loop 3:** The voltage drops across the 3Ω and 5Ω resistors give:\n    $-3(i_3 - i_2) - 5i_3 = 0$\n\nFind the values of the three loop currents: $i_1, i_2,$ and $i_3$.\n\n**Solution:**\n\n> Mathematical Setup\n\nFirst, simplify the equations and align the variables:\n\n1.  $30 - 6i_1 + 2i_2 = 0 \\implies 6i_1 - 2i_2 + 0i_3 = 30$\n\n2.  $2i_1 - 6i_2 + 3i_3 = 0$\n\n3.  $3i_2 - 8i_3 = 0 \\implies 0i_1 + 3i_2 - 8i_3 = 0$\n\nThis gives us the system $Ax=b$.\n\n> Step 1: Write the Augmented Matrix\n$$\n\\left[\n\\begin{array}{ccc|c}\n6 & -2 & 0 & 30 \\\\\n2 & -6 & 3 & 0 \\\\\n0 & 3 & -8 & 0\n\\end{array}\n\\right]\n$$\n\n> Step 2: Perform Gauss Elimination\n\nLet's simplify Row 1 first by dividing by 2: $R_1 \\leftarrow R_1 / 2$.\n$$\n\\left[\n\\begin{array}{ccc|c}\n3 & -1 & 0 & 15 \\\\\n2 & -6 & 3 & 0 \\\\\n0 & 3 & -8 & 0\n\\end{array}\n\\right]\n$$\nNow, create a zero in the first column of Row 2. The operation is $R_2 \\leftarrow R_2 - \\frac{2}{3}R_1$. (To make it easier, let's do $R_2 \\leftarrow 3R_2 - 2R_1$).\n$$\n3 \\times [2, -6, 3, 0] \\rightarrow [6, -18, 9, 0]\n$$\n$$\n2 \\times [3, -1, 0, 15] \\rightarrow [6, -2, 0, 30]\n$$\n$$\n\\text{New } R_2 = [0, -16, 9, -30]\n$$\nOur matrix is now:\n$$\n\\left[\n\\begin{array}{ccc|c}\n3 & -1 & 0 & 15 \\\\\n0 & -16 & 9 & -30 \\\\\n0 & 3 & -8 & 0\n\\end{array}\n\\right]\n$$\nFinally, let's eliminate the first element in Row 3. Oh, wait, it's already zero! So we move to the next pivot. We need to create a zero in the second column of Row 3. The operation is $R_3 \\leftarrow R_3 + \\frac{3}{16}R_2$ (or $R_3 \\leftarrow 16R_3 + 3R_2$).\n$$\n16 \\times [0, 3, -8, 0] \\rightarrow [0, 48, -128, 0]\n$$\n$$\n3 \\times [0, -16, 9, -30] \\rightarrow [0, -48, 27, -90]\n$$\n$$\n\\text{New } R_3 = [0, 0, -101, -90]\n$$\nOur final Row Echelon Form is:\n$$\n\\left[\n\\begin{array}{ccc|c}\n3 & -1 & 0 & 15 \\\\\n0 & -16 & 9 & -30 \\\\\n0 & 0 & -101 & -90\n\\end{array}\n\\right]\n$$\n\n>Step 3: Back Substitution\n\n*   From $R_3$: $-101i_3 = -90 \\implies i_3 = 90/101 \\approx 0.891$ A.\n\n*   From $R_2$: $-16i_2 + 9i_3 = -30 \\implies -16i_2 + 9(90/101) = -30 \\implies i_2 \\approx 2.375$ A.\n\n*   From $R_1$: $3i_1 - i_2 = 15 \\implies 3i_1 - 2.375 = 15 \\implies i_1 \\approx 5.792$ A.\n\n>**Python Verification**\n\n::: {#solve-circuit .cell execution_count=5}\n``` {.python .cell-code}\nimport numpy as np\n\n# Coefficient matrix A (from KVL equations)\nA = np.array([\n    [6, -2, 0],\n    [2, -6, 3],\n    [0, 3, -8]\n])\n\n# Constants vector b (from voltage sources)\nb = np.array([30, 0, 0])   # <-- adjust according to your circuit\n\n# Solve the system Ax = b\ncurrents = np.linalg.solve(A, b)\n\nprint(\"The solution currents are:\")\nprint(f\"i1 = {currents[0]:.3f} Amps\")\nprint(f\"i2 = {currents[1]:.3f} Amps\")\nprint(f\"i3 = {currents[2]:.3f} Amps\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe solution currents are:\ni1 = 5.792 Amps\ni2 = 2.376 Amps\ni3 = 0.891 Amps\n```\n:::\n:::\n\n\n---\n\n### Problem 2: Polynomial Curve Fitting (Computer Graphics)\n\n**Scenario:**\nYou are a game developer designing a smooth path for a character. You want a parabola of the form $y = ax^2 + bx + c$ to pass through three specific points: $P_1(-1, 10)$, $P_2(1, 4)$, and $P_3(2, 7)$. Find the coefficients $a, b,$ and $c$ that define this unique parabola.\n\n**Solution**\n\n>Step 1: Mathematical Setup\n\nEach point must satisfy the equation $y = ax^2 + bx + c$. Plugging in the coordinates gives us three linear equations for the unknowns $a, b, c$.\n\n*   For $P_1(-1, 10)$: $a(-1)^2 + b(-1) + c = 10 \\implies a - b + c = 10$\n*   For $P_2(1, 4)$: $a(1)^2 + b(1) + c = 4 \\implies a + b + c = 4$\n*   For $P_3(2, 7)$: $a(2)^2 + b(2) + c = 7 \\implies 4a + 2b + c = 7$\n\n>Step 2: Gauss Elimination\n\n*   **Matrix:** $\\left[ \\begin{array}{ccc|c} 1 & -1 & 1 & 10 \\\\ 1 & 1 & 1 & 4 \\\\ 4 & 2 & 1 & 7 \\end{array} \\right]$\n*   **$R_2 \\leftarrow R_2 - R_1$ and $R_3 \\leftarrow R_3 - 4R_1$:** $\\left[ \\begin{array}{ccc|c} 1 & -1 & 1 & 10 \\\\ 0 & 2 & 0 & -6 \\\\ 0 & 6 & -3 & -33 \\end{array} \\right]$\n*   **$R_3 \\leftarrow R_3 - 3R_2$:** $\\left[ \\begin{array}{ccc|c} 1 & -1 & 1 & 10 \\\\ 0 & 2 & 0 & -6 \\\\ 0 & 0 & -3 & -15 \\end{array} \\right]$\n\n>Step 3: Back Substitution:\n\n*   $-3c = -15 \\implies c = 5$\n*   $2b = -6 \\implies b = -3$\n*   $a - b + c = 10 \\implies a - (-3) + 5 = 10 \\implies a = 2$\n\n*   The parabola is $y = 2x^2 - 3x + 5$.\n\n>**Python Verification**\n\n::: {#cell-solve-polynomial .cell execution_count=6}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Matrix for system (x^2, x, 1) at points x = -1, 1, 2\nA = np.array([\n    [(-1)**2, -1, 1],   # point (-1, 10)\n    [(1)**2,  1, 1],    # point (1, 4)\n    [(2)**2,  2, 1]     # point (2, 7)\n])\n\n# Corresponding y-values\nb = np.array([10, 4, 7])\n\n# Solve for coefficients a, b, c\ncoeffs = np.linalg.solve(A, b)\na, b_c, c = coeffs\n\nprint(f\"The coefficients are a={a:.1f}, b={b_c:.1f}, c={c:.1f}\")\nprint(f\"The parabola is y = {a:.1f}x² + {b_c:.1f}x + {c:.1f}\")\n\n# Plotting\nx_vals = np.linspace(-2, 3, 200)\ny_vals = a * x_vals**2 + b_c * x_vals + c\n\nplt.plot(x_vals, y_vals, label='Fitted Parabola')\nplt.plot([-1, 1, 2], [10, 4, 7], 'ro', label='Data Points')\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe coefficients are a=2.0, b=-3.0, c=5.0\nThe parabola is y = 2.0x² + -3.0x + 5.0\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](module1_files/figure-html/solve-polynomial-output-2.png){#solve-polynomial width=566 height=411}\n:::\n:::\n\n\n---\n\n### Problem 3: Network Traffic Flow (Computer Science)\n\n**Scenario:**\nThe figure below shows the traffic flow (in cars per hour) over a network of one-way streets. The total flow into any intersection must equal the total flow out of that intersection. This conservation principle gives us a system of linear equations.\n\n![Network diagram](Network.png){#fig-network}\n\nConsider a simpler 3-node network.\n*   **Node 1:** $500 = x_1 + x_2$\n*   **Node 2:** $x_1 + x_3 = 300$\n*   **Node 3:** $x_2 = x_3 + 200$\n\nFind the traffic flows $x_1, x_2,$ and $x_3$.\n\n**Solution:**\n\n>Step 1: Mathematical Setup\n\nRearrange the equations:\n1.  $x_1 + x_2 + 0x_3 = 500$\n2.  $x_1 + 0x_2 + x_3 = 300$\n3.  $0x_1 + x_2 - x_3 = 200$\n\n>Step 2: Gauss Elimination\n\n*   The matrix form of the system can be written as: $\\left[ \\begin{array}{ccc|c} 1 & 1 & 0 & 500 \\\\ 1 & 0 & 1 & 300 \\\\ 0 & 1 & -1 & 200 \\end{array} \\right]$\\\\\nUsing elementory transformations;\n\n*   **$R_2 \\leftarrow R_2 - R_1$:** $\\left[ \\begin{array}{ccc|c} 1 & 1 & 0 & 500 \\\\ 0 & -1 & 1 & -200 \\\\ 0 & 1 & -1 & 200 \\end{array} \\right]$\n\n*   **$R_3 \\leftarrow R_3 + R_2$:** $\\left[ \\begin{array}{ccc|c} 1 & 1 & 0 & 500 \\\\ 0 & -1 & 1 & -200 \\\\ 0 & 0 & 0 & 0 \\end{array} \\right]$\n*  It represents a system with two equations in three variables. So the system has infinitely many solutions! \n\n>Step 3: Back substitution\n\nFrom the equations;\n$$\n\\begin{cases}\nx_1 + x_2 = 500 \\\\\nx_2 - x_3 = 200\n\\end{cases}\n$$\n\nLet $x_3 = t$ (free parameter). Then:\n\n$$\nx_2 = 200 + t, \\quad \nx_1 = 500 - x_2 = 300 - t.\n$$\n\nThus the solution set is:\n\n$$\n(x_1, x_2, x_3) = (300 - t,\\; 200 + t,\\; t), \\qquad t \\in \\mathbb{R}.\n$$\n\n---\n\n>*Non-Negative Constraints*\n\nIf the variables represent flows, they must satisfy $x_i \\geq 0$:\n\n$$\n\\begin{align*}\nx_1 &= 300 - t \\geq 0 \\quad \\Rightarrow \\quad t \\leq 300\\\\\nx_2 &= 200 + t \\geq 0 \\quad \\Rightarrow \\quad t \\geq -200\\\\\nx_3 = t \\geq 0\n\\end{align*}\n$$\nHence the valid range is:\n$$\n0 \\leq t \\leq 300\n$$\n\n---\n\n*Example Solution*\n\nFor $t = 50$, we get one solution as given below:\n\n$$\n(x_1, x_2, x_3) = (250, 250, 50).\n$$\n\n>*Python code for verification*\n\n::: {#solve-traffic .cell execution_count=7}\n``` {.python .cell-code}\nimport numpy as np\n\n# Coefficient matrix from the equations:\n# x1 + x2      = 500\n# x1     + x3  = 300\n#      x2 - x3 = 200\nA = np.array([\n    [1, 1, 0],\n    [1, 0, 1],\n    [0, 1, -1]\n])\nb = np.array([500, 300, 200])\n\n# Since this system is dependent, use least-squares solution\nflows, residuals, rank, s = np.linalg.lstsq(A, b, rcond=None)\n\nx1, x2, x3 = flows\n\nprint(\"General traffic flow solution (with free variable t):\")\nprint(f\"x1 = {x1:.1f} + t\")\nprint(f\"x2 = {x2:.1f} - t\")\nprint(f\"x3 = {x3:.1f} + t\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGeneral traffic flow solution (with free variable t):\nx1 = 266.7 + t\nx2 = 233.3 - t\nx3 = 33.3 + t\n```\n:::\n:::\n\n\n----\n\n## Application Challenge: Gauss Elimination for Multiple Linear Regression\n\n\n>**Objective**\n\nThis challenge demonstrates how the **Gauss elimination method** from Linear Algebra can be applied to solve a **multiple linear regression** problem.  \nWe use the **Diabetes dataset** available in `sklearn` and compare our solution with the library function `LinearRegression`.\n\n>**Dataset:**\n\nUse the Diabetes dataset from `sklearn.datasets`. Let the response be the target vector $y$. Use the first three features as predictors. Include an intercept term.\n\n>**Step 1:** Formulation of the regression problem\n\nFor multiple linear regression, we model the response variable $y$ as\n\n$$\ny \\approx X \\beta\n$$\n\nwhere  \n\n- $X$ is the **design matrix** (with columns for features and an intercept),  \n- $\\beta$ is the vector of **regression coefficients**,  \n- $y$ is the **target vector**.  \n\nThe **least squares solution** is obtained from the **normal equations**:\n\n$$\n(X^T X) \\beta = X^T y\n$$\n\n---\n\n>**Step 2:** Load the dataset and prepare $X$ and $y$\n\n::: {#04d33300 .cell execution_count=8}\n``` {.python .cell-code}\nimport numpy as np\nfrom sklearn.datasets import load_diabetes\n\n# Load the diabetes dataset\nX, y = load_diabetes(return_X_y=True)\n\n# Select the first 3 features for simplicity\nX = X[:, :3]\n\n# Add a column of ones for the intercept\nX = np.c_[np.ones(X.shape[0]), X]\n\n# Normal equations\nA = X.T @ X\nb = X.T @ y\n\nprint(\"Matrix A (X^T X):\\n\", A)\nprint(\"\\nVector b (X^T y):\\n\", b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMatrix A (X^T X):\n [[ 4.42000000e+02 -1.66533454e-16  2.60902411e-15 -1.00239261e-13]\n [-1.66533454e-16  1.00000000e+00  1.73737101e-01  1.85084666e-01]\n [ 2.60902411e-15  1.73737101e-01  1.00000000e+00  8.81613990e-02]\n [-1.00239261e-13  1.85084666e-01  8.81613990e-02  1.00000000e+00]]\n\nVector b (X^T y):\n [67243.           304.18307453    69.71535568   949.43526038]\n```\n:::\n:::\n\n\n>**Step 3:** Solve using Gauss elimination\n\n::: {#7da6b6de .cell execution_count=9}\n``` {.python .cell-code}\ndef gauss_elimination(A, b):\n    A = A.astype(float).copy()\n    b = b.astype(float).copy()\n    n = len(b)\n    \n    # Forward elimination\n    for i in range(n):\n        # Normalize the pivot row\n        pivot = A[i, i]\n        A[i] = A[i] / pivot\n        b[i] = b[i] / pivot\n        \n        # Eliminate below\n        for j in range(i+1, n):\n            factor = A[j, i]\n            A[j] = A[j] - factor * A[i]\n            b[j] = b[j] - factor * b[i]\n    \n    # Back substitution\n    x = np.zeros(n)\n    for i in range(n-1, -1, -1):\n        x[i] = b[i] - np.dot(A[i, i+1:], x[i+1:])\n    \n    return x\n\nbeta_gauss = gauss_elimination(A, b)\nprint(\"Regression coefficients (Gauss elimination):\\n\", beta_gauss)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRegression coefficients (Gauss elimination):\n [152.13348416 138.9039107  -36.13526678 926.91201212]\n```\n:::\n:::\n\n\n>**Step 4:** Compare with `sklearn` LinearRegression\n\n::: {#5e47498f .cell execution_count=10}\n``` {.python .cell-code}\nfrom sklearn.linear_model import LinearRegression\n\nreg = LinearRegression().fit(X, y)\n\n# Collect sklearn coefficients (intercept + first 3 features)\nbeta_sklearn = np.r_[reg.intercept_, reg.coef_[1:4]]\n\nprint(\"Regression coefficients (sklearn):\\n\", beta_sklearn)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRegression coefficients (sklearn):\n [152.13348416 138.9039107  -36.13526678 926.91201212]\n```\n:::\n:::\n\n\n>**Conclusions:**\n\n- Gauss elimination successfully solved the regression problem by computing the coefficients from the normal equations.\n\n- The result matches the coefficients obtained from `sklearn.LinearRegression()`.\n\n- This demonstrates how a classical linear algebra algorithm underlies a modern machine learning method.\n\n## Rank and The Fundamental Theorem\n\nThe number of pivots in a matrix is a fundamentally important number. It is called the **Rank** of the matrix.\n\n> **Definition: Rank**\n> The rank of a matrix $A$ is the number of pivots in its row echelon form.\n\nIn our example, the rank is 3. The rank cannot be larger than the number of rows or columns.\n\nThis brings us to the *Fundamental Theorem for Linear Systems*. This theorem tells us everything about the existence and uniqueness of solutions.\n\n> **The Fundamental Theorem for Linear Systems (Statement Only)**\n>\n> 1.  **Existence:** A system $Ax = b$ has a solution if and only if the rank of the coefficient matrix $A$ is equal to the rank of the augmented matrix $[A | b]$. (In other words, the elimination process doesn't lead to an impossible equation like $0 = 5$).\n>\n> 2.  **Uniqueness:**\n>     *   If a solution exists and the $\\text{rank} = \\text{number of variables}$, the solution is *unique*.\n>     *   If a solution exists and the $\\text{rank} < \\text{number of variables}$, there are *infinitely many solutions*. The difference $(\\text{number of variables} - \\text{rank})$ tells you the number of \"free variables\" you can choose.\n\n## Problems on Rank of a Matrix\n\n### Problem 1\nFind the rank of  $A = \\begin{bmatrix} 1 & 2 & 3 \\\\ 2 & 4 & 6 \\\\ 3 & 6 & 9 \\end{bmatrix}.$\n\n**Solution:**  \nApplying row operations:\n$$\nR_2 \\to R_2 - 2R_1, \\quad R_3 \\to R_3 - 3R_1\n$$\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 2 & 3 \\\\ 0 & 0 & 0 \\\\ 0 & 0 & 0 \\end{bmatrix}\n$$\nOnly one non-zero row remains.  \n**Rank = 1**.\n\n---\n\n### Problem 2\nFind the rank of  $B = \\begin{bmatrix} 2 & 4 & 1 \\\\ 0 & 5 & 2 \\\\ 0 & 0 & 3 \\end{bmatrix}.$\n\n\n**Solution:**  \nThe matrix is in upper triangular form. All diagonal entries are non-zero.  \n**Rank = 3**.\n\n---\n\n### Problem 3\nFind the rank of  $C = \\begin{bmatrix} 1 & 1 & 1 \\\\ 1 & 2 & 3 \\\\ 1 & 3 & 6 \\end{bmatrix}.$\n\n**Solution:**  \nApplying $R_2 \\to R_2 - R_1$ and $R_3 \\to R_3 - R_1$:\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 1 & 1 \\\\ 0 & 1 & 2 \\\\ 0 & 2 & 5 \\end{bmatrix}\n$$\nNow $R_3 \\to R_3 - 2R_2$:\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 1 & 1 \\\\ 0 & 1 & 2 \\\\ 0 & 0 & 1 \\end{bmatrix}\n$$\nAll rows are non-zero.  \n**Rank = 3**.\n\n---\n\n### Problem 4\nFind the rank of  $D = \\begin{bmatrix} 1 & 2 & 3 & 4 \\\\ 2 & 4 & 6 & 8 \\\\ 1 & 3 & 4 & 7 \\end{bmatrix}.$\n\n**Solution:**  \n\n$R_2 \\to R_2 - 2R_1$, $R_3 \\to R_3 - R_1$:\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 2 & 3 & 4 \\\\ 0 & 0 & 0 & 0 \\\\ 0 & 1 & 1 & 3 \\end{bmatrix}\n$$\nSwap $R_2$ and $R_3$:\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 2 & 3 & 4 \\\\ 0 & 1 & 1 & 3 \\\\ 0 & 0 & 0 & 0 \\end{bmatrix}\n$$\nTwo non-zero rows.  \n**Rank = 2**.\n\n---\n\n### Problem 5\nFind the rank of  $A = \\begin{bmatrix} 0 & 2 & 4 \\\\ 1 & 3 & 5 \\\\ 2 & 4 & 6 \\end{bmatrix}.$\n\n**Solution:**  \nSwap $R_1$ and $R_2$:\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 3 & 5 \\\\ 0 & 2 & 4 \\\\ 2 & 4 & 6 \\end{bmatrix}\n$$\n$R_3 \\to R_3 - 2R_1$:\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 3 & 5 \\\\ 0 & 2 & 4 \\\\ 0 & -2 & -4 \\end{bmatrix}\n$$\n$R_3 \\to R_3 + R_2$:\n$$\n\\Rightarrow \\begin{bmatrix} 1 & 3 & 5 \\\\ 0 & 2 & 4 \\\\ 0 & 0 & 0 \\end{bmatrix}\n$$\nTwo non-zero rows.  \n**Rank = 2**.\n\n\n## Application problems\n\n### Problem 1\n\nIn a digital communication system, three transmitted signals are received at three different antennas. The received signal strengths (in arbitrary units) are represented by the matrix, \n$$\nA =\n\\begin{bmatrix}\n2 & 3 & 1 \\\\\n4 & 6 & 2 \\\\\n1 & 1.5 & 0.5\n\\end{bmatrix}\n$$\n\nDetermine the rank of $A$ and comment on whether the received signals are linearly independent.\n\n**Solution:**  \nBy performing Gaussian elimination:\n$$\nR_2 \\to R_2 - 2R_1,\\quad R_3 \\to R_3 - 0.5R_1\n$$\nWe get:\n\n$$\n\\begin{bmatrix}\n2 & 3 & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\nThe rank is $1\\$. This implies that all received signals are linearly dependent — effectively carrying the same information.\n\n---\n\n### Problem 2\nIn a computer vision system, the transformation matrix mapping 3D world points to 2D image points is given by:\n\n$$\nB =\n\\begin{bmatrix}\n1 & 0 & 2 \\\\\n0 & 1 & 3 \\\\\n2 & 1 & 7\n\\end{bmatrix}\n$$\n\nFind the rank of $B$ and state whether the transformation is invertible.\n\n**Solution:**  \nPerform:\n\n$$\nR_3 \\to R_3 - 2R_1\n$$\n\n$$\n\\begin{bmatrix}\n1 & 0 & 2 \\\\\n0 & 1 & 3 \\\\\n0 & 1 & 3\n\\end{bmatrix}\n$$\n\nNow:\n\n$$\nR_3 \\to R_3 - R_2\n$$\n\n$$\n\\begin{bmatrix}\n1 & 0 & 2 \\\\\n0 & 1 & 3 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\nRank = $2$. The transformation is not invertible because it is not full rank.\n\n---\n\n### Problem 3\nIn a microprocessor system, the current equations for three loops are given by:\n\n$$\n\\begin{cases}\n2I_1 + I_2 + I_3 = 5 \\\\\n4I_1 + 2I_2 + 2I_3 = 10 \\\\\n3I_1 + 1.5I_2 + 1.5I_3 = 7.5\n\\end{cases}\n$$\n\nForm the coefficient matrix and determine its rank. Comment on the uniqueness of the solution.\n\n**Solution:**  \nCoefficient matrix:\n\n$$\nC =\n\\begin{bmatrix}\n2 & 1 & 1 \\\\\n4 & 2 & 2 \\\\\n3 & 1.5 & 1.5\n\\end{bmatrix}\n$$\n\nUsing Gaussian elimination, all rows become proportional to the first row, giving rank = $1$.  \nSince the rank is less than the number of variables, the system has infinitely many solutions.\n\n---\n\n### Problem 4\nIn a data transmission system, the coding matrix is:\n\n$$\nD =\n\\begin{bmatrix}\n1 & 2 & 3 & 4 \\\\\n2 & 4 & 6 & 8 \\\\\n1 & 3 & 4 & 7\n\\end{bmatrix}\n$$\n\nFind the rank and explain its implication on error detection capability.\n\n**Solution:**  \nPerform:\n\n$$\nR_2 \\to R_2 - 2R_1\n$$\n\n$$\n\\begin{bmatrix}\n1 & 2 & 3 & 4 \\\\\n0 & 0 & 0 & 0 \\\\\n1 & 3 & 4 & 7\n\\end{bmatrix}\n$$\n\n$$\nR_3 \\to R_3 - R_1\n$$\n\n$$\n\\begin{bmatrix}\n1 & 2 & 3 & 4 \\\\\n0 & 0 & 0 & 0 \\\\\n0 & 1 & 1 & 3\n\\end{bmatrix}\n$$\n\nThis has two non-zero rows → rank = $2$.  \nA rank less than the number of columns implies reduced ability to detect and correct transmission errors.\n\n---\n\n### Problem 5\nAn image compression algorithm stores pixel blocks as linear combinations of a set of basis images. The matrix of basis images is:\n\n$$\nE =\n\\begin{bmatrix}\n1 & 0 & 1 \\\\\n0 & 1 & 1 \\\\\n1 & 1 & 2\n\\end{bmatrix}\n$$\n\nFind the rank of $E$ and comment on whether the basis set is minimal.\n\n**Solution:**  \nPerform:\n$$\nR_3 \\to R_3 - R_1\n$$\n\n$$\n\\begin{bmatrix}\n1 & 0 & 1 \\\\\n0 & 1 & 1 \\\\\n0 & 1 & 1\n\\end{bmatrix}\n$$\n\n$$\nR_3 \\to R_3 - R_2\n$$\n\n$$\n\\begin{bmatrix}\n1 & 0 & 1 \\\\\n0 & 1 & 1 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n\nRank = $2$. This means the third basis image is not independent; a smaller basis can be used for compression.\n\n## Homogeneous and Non-Homogeneous Systems\n\nThere are two main flavors of systems we need to discuss.\n\n### Homogeneous System: $Ax = 0$\n\nThis is a system where the right-hand side is all zeros. For example: $x + 2y + z = 0$.\n\n*   These systems *always* have at least one solution: the *trivial solution* $x=0, y=0, z=0$.\n*   The interesting question is whether they have *non-trivial* solutions.\n*   From the Fundamental Theorem, we will have infinitely many (non-trivial) solutions if $\\text{rank} < \\text{number of variables}$. The solutions form a space called the *nullspace*.\n\nLet's find the nullspace of a different matrix, one that has a non-trivial nullspace.\n\n::: {#sympy-nullspace .cell cap='The basis for the nullspace. Any multiple of this vector is a solution to Bx=0.' execution_count=11}\n``` {.python .cell-code}\nimport sympy as sp\n\n# Matrix with non-trivial nullspace\nB = sp.Matrix([\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n])\n\nnullspace_vectors = B.nullspace()\nprint(f\"The rank of matrix B is {B.rank()}. It has {B.shape[1]} columns.\")\nprint(\"The nullspace is spanned by:\")\nsp.pprint(nullspace_vectors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe rank of matrix B is 2. It has 3 columns.\nThe nullspace is spanned by:\n⎡⎡1 ⎤⎤\n⎢⎢  ⎥⎥\n⎢⎢-2⎥⎥\n⎢⎢  ⎥⎥\n⎣⎣1 ⎦⎦\n```\n:::\n:::\n\n\nFor matrix $B$, the rank (2) is less than the number of variables (3), so there is one free variable and the nullspace is a line through the origin. Any multiple of the vector $[1, -2, 1]^T$ is a solution to $Bx=0$.\n\n### Non-Homogeneous System: $Ax = b$\n\nThis is the general case where $b$ is not all zeros. The complete solution has a beautiful structure.\n\n> *Structure of the Complete Solution*\n> The complete solution to $Ax = b$ is given by:\n> $$ x_{\\text{complete}} = x_{\\text{particular}} + x_{\\text{homogeneous}} $$\n>\n> Where:\n> *   $x_{\\text{particular}}$ is **one** particular solution to $Ax = b$.\n> *   $x_{\\text{homogeneous}}$ is **all** the solutions to the associated homogeneous system $Ax = 0$.\n\nThis is an amazing and deep result! It says that the set of all solutions to $Ax = b$ is just a shifted version of the nullspace. The nullspace goes through the origin, and we just shift the whole thing by one particular solution vector.\n\n## Tutorial questions: Applications of Fundamental Theorem in Linear Algebra\n\n>**Objectives and expected outcomes:**\n\n- This tutorial focuses on **application-level problems** based on the Fundamental Theorem of Linear Algebra (FTLA). \n\n  - Students are expected to **formulate, solve, and interpret** systems of linear equations in applied contexts.\n  \n  - Apply **rank and FTLA** to determine solvability and uniqueness of engineering systems.  \n  - Connect mathematical theory with **applications in signal processing, circuit analysis, and graphics**.  \n  - Justify consistency, uniqueness, or multiplicity of solutions through stepwise reasoning.\n\n----\n\n### Signal Processing – Solvability of Filter Design Equations\n\nA digital filter is to be designed such that its output satisfies the linear system\n\n$$\nAx = b, \\quad \nA = \\begin{bmatrix}\n1 & 0 & -1 \\\\\n0 & 1 & -1 \\\\\n1 & 1 & -2\n\\end{bmatrix}, \\quad \nb = \\begin{bmatrix} 2 \\\\ 1 \\\\ 3 \\end{bmatrix}.\n$$\n\nDiscuss the consistency of the system design and the filter design flexibility using the FTLA.\n\n**Solution:**\n\n1. **Check rank of $A$:**\n   $$\n   A \\sim \n   \\begin{bmatrix}\n   1 & 0 & -1 \\\\\n   0 & 1 & -1 \\\\\n   0 & 0 & 0\n   \\end{bmatrix}\n   \\quad \\Rightarrow \\quad \\text{rank}(A)=2.\n   $$\n\n2. **Augmented matrix rank:**\n   $$\n   K \\sim \n   \\begin{bmatrix}\n   1 & 0 & -1 & | & 2 \\\\\n   0 & 1 & -1 & | & 1 \\\\\n   0 & 0 & 0 & | & 0\n   \\end{bmatrix}.\n   $$\n   Rank $(A)=$Rank $K=2$.  \n   ⇒ **System is consistent.**\n\n3. **Number of solutions:**  \n   Since $\\text{rank}(A)=2 < n=3$, the system has **infinitely many solutions**.\n\n4. **Solve reduced system:**  \n   $$\n   x_1 - x_3 = 2, \\quad x_2 - x_3 = 1.\n   $$\n   General solution:\n   $$\n   x = \\begin{bmatrix} 2 \\\\ 1 \\\\ 0 \\end{bmatrix} + x_3 \\begin{bmatrix} 1 \\\\ 1 \\\\ 1 \\end{bmatrix}, \n   \\quad x_3 \\in \\mathbb{R}.\n   $$\n\n✅ **Apply-level justification:** Students apply rank conditions to check consistency, then compute and interpret the infinite solution set as filter design flexibility.\n\n---\n\n### Circuit Analysis – Nodal Equations\n\nA circuit yields the nodal equations:\n\n$$\n\\begin{bmatrix}\n2 & -1 & -1 \\\\\n-1 & 2 & -1 \\\\\n-1 & -1 & 2\n\\end{bmatrix}\n\\begin{bmatrix} V_1 \\\\ V_2 \\\\ V_3 \\end{bmatrix}\n=\n\\begin{bmatrix} 0 \\\\ 0 \\\\ 0 \\end{bmatrix}.\n$$\n\nExamine the consistency of the system and find the voltage across the circuit.\n\n**Solution**\n\n1. **Form augmented matrix:** The augmented matrix, $K$ is given by:\n\n$$\nK=\\left[\\begin{array}{ccc|c}\n2 & -1 & -1 & 0\\\\\n-1 & 2 & -1 & 0\\\\\n-1 & -1 & 2 & 0\n\\end{array}\\right].\n$$\n\n2. **Eliminate first column entries below the pivot (2 in row 1):**  \n- $R_2 \\to 2R_2 + R_1$  \n- $R_3 \\to 2R_3 + R_1$  \n\nThis gives:\n$$\nK\\sim \\left[\\begin{array}{ccc|c}\n2 & -1 & -1 & 0\\\\\n0 & 3 & -3 & 0\\\\\n0 & -3 & 3 & 0\n\\end{array}\\right].\n$$\n\n3. **Eliminate second column entry below pivot (3 in row 2):**  \n- $R_3 \\to R_3 + R_2$.  \n\nThis gives:\n$$\nK\\sim \\left[\\begin{array}{ccc|c}\n2 & -1 & -1 & 0\\\\\n0 & 3 & -3 & 0\\\\\n0 & 0 & 0 & 0\n\\end{array}\\right].\n$$\n\n4. **Interpret the reduced system:**\n$$\n\\begin{cases}\n2V_1 - V_2 - V_3 = 0 \\\\\n3V_2 - 3V_3 = 0\n\\end{cases}\n$$\n\nSimplify the equations:\n$$\n\\begin{cases}\n2V_1 = V_2 + V_3 \\\\\nV_2 = V_3\n\\end{cases}\n$$\n\n5. **Parametric solution:**  \nLet $V_3 = t$. Then $V_2 = t$, and $2V_1 = 2t \\Rightarrow V_1 = t$.  \n\nSo,\n$$\n\\begin{bmatrix}V_1\\\\V_2\\\\V_3\\end{bmatrix} \n= t \\begin{bmatrix}1\\\\1\\\\1\\end{bmatrix}, \\quad t \\in \\mathbb{R}.\n$$\n\n✅ **Apply-level justification:** Students apply elimination (without normalizing pivots) to show that the solution space is one-dimensional, matching the physics of nodal equations.\n\n---\n\n### Computer Graphics – Transformation Equations\n\nIn a 2D graphics engine, the system for affine transformation parameters is:\n\n$$\n\\begin{bmatrix}\n1 & 0 & 0 & 0 \\\\\n0 & 1 & 0 & 0 \\\\\n1 & 1 & 1 & 0 \\\\\n0 & 0 & 1 & 1\n\\end{bmatrix}\n\\begin{bmatrix} a \\\\ b \\\\ c \\\\ d \\end{bmatrix}\n=\n\\begin{bmatrix} 2 \\\\ 3 \\\\ 7 \\\\ 5 \\end{bmatrix}.\n$$\n\nExamine the stability of the transformation and find a representation of the parameters if possible.\n\n**Solution:** \n\n**1. Form the augmented matrix $[A\\mid b]$:**\n$$\n\\left[\\begin{array}{cccc|c}\n1 & 0 & 0 & 0 & 2\\\\[4pt]\n0 & 1 & 0 & 0 & 3\\\\[4pt]\n1 & 1 & 1 & 0 & 7\\\\[4pt]\n0 & 0 & 1 & 1 & 5\n\\end{array}\\right].\n$$\n\n**2. Use the obvious pivots in rows 1 and 2 to eliminate corresponding entries below/above (they already isolate $a$ and $b$):**  \n- Row 1 already gives $a = 2$.  \n- Row 2 already gives $b = 3$.\n\nWe can still perform systematic elimination to show consistency:\n\n**3. Eliminate $a$ and $b$ from row 3 using rows 1 and 2:**\n- Replace $R_3 \\to R_3 - R_1 - R_2$:\n$$\nR_3 = [1,1,1,0\\,|\\,7] - [1,0,0,0\\,|\\,2] - [0,1,0,0\\,|\\,3] = [0,0,1,0\\,|\\,2].\n$$\n\nAfter this operation the augmented matrix becomes:\n$$\n\\left[\\begin{array}{cccc|c}\n1 & 0 & 0 & 0 & 2\\\\[4pt]\n0 & 1 & 0 & 0 & 3\\\\[4pt]\n0 & 0 & 1 & 0 & 2\\\\[4pt]\n0 & 0 & 1 & 1 & 5\n\\end{array}\\right].\n$$\n\n**4. Use the pivot in row 3 (now isolates $c$) to eliminate $c$ from row 4:**  \n- Replace $R_4 \\to R_4 - R_3$:\n$$\nR_4 = [0,0,1,1\\,|\\,5] - [0,0,1,0\\,|\\,2] = [0,0,0,1\\,|\\,3].\n$$\n\nNow the matrix is:\n$$\n\\left[\\begin{array}{cccc|c}\n1 & 0 & 0 & 0 & 2\\\\[4pt]\n0 & 1 & 0 & 0 & 3\\\\[4pt]\n0 & 0 & 1 & 0 & 2\\\\[4pt]\n0 & 0 & 0 & 1 & 3\n\\end{array}\\right].\n$$\n\n**5. Read off the solution from the (upper-triangular/diagonalized) augmented matrix:**\n\n$$\n\\begin{aligned}\na &= 2,\\\\\nb &= 3,\\\\\nc &= 2,\\\\\nd &= 3.\n\\end{aligned}\n$$\n\nSo the unique solution is\n$$\n(a,b,c,d) = (2,\\,3,\\,2,\\,3).\n$$\n\n**6. Verify uniqueness and consistency:**  \n\n- The elimination produced a diagonal (full pivot in each column), showing \\(\\text{rank}(A)=4\\) and hence a unique solution.  \n- All rows were consistent (no contradictory zero = nonzero row), so the system is consistent.\n\n✅ **Apply-level justification:** Students carry out elimination steps to solve a real-engineering parameter identification problem, verifying full-rank condition and interpreting the unique parameter set for a stable affine transformation in graphics.\n\n---\n\n\n\n## Module I Summary\n\n*   We can view a linear system in two ways: the *Row Picture* (intersecting hyperplanes) and the *Column Picture* (linear combination of vectors).\n*   *Gauss Elimination* is the core algorithm for solving any system. It reduces the system to *Row Echelon Form*.\n*   The *rank* of a matrix is the number of pivots, and it's the most important number about that matrix.\n*   The *Fundamental Theorem* tells us when solutions exist and if they are unique, all based on the rank.\n*   The complete solution to $Ax = b$ is a combination of one particular solution and all solutions to $Ax = 0$ (the nullspace).\n\nThis module has set the stage. We have the main problem ($Ax=b$) and the main algorithm (elimination). In the next modules, we will build a much deeper understanding of the matrix $A$ itself.\n\n",
    "supporting": [
      "module1_files"
    ],
    "filters": [],
    "includes": {}
  }
}